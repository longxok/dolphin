<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <properties resource="application-oracle.properties"  />

    <context id="oracle" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
        <!--这个插件主要用来为生成的Java模型类添加序列化接口，并生成serialVersionUID字段；-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <!--<plugin type="com.itfsw.mybatis.generator.plugins.LimitPlugin">-->
            <!--&lt;!&ndash; 通过配置startPage影响Example中的page方法开始分页的页码，默认分页从0开始 &ndash;&gt;-->
            <!--<property name="startPage" value="0"/>-->
        <!--</plugin>-->

        <!--&lt;!&ndash; 批量插入插件 &ndash;&gt;-->
        <!--<plugin type="com.itfsw.mybatis.generator.plugins.BatchInsertPlugin">-->
            <!--&lt;!&ndash;-->
            <!--开启后可以实现官方插件根据属性是否为空决定是否插入该字段功能-->
            <!--！需开启allowMultiQueries=true多条sql提交操作，所以不建议使用！插件默认不开启-->
            <!--&ndash;&gt;-->
            <!--<property name="allowMultiQueries" value="false"/>-->
        <!--</plugin>-->
        <!--<plugin type="tk.mybatis.mapper.generator.MapperPlugin">-->
            <!--<property name="mappers" value="com.dolphin.starting.config.MyMapper" />-->
            <!--&lt;!&ndash;caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true&ndash;&gt;-->
          <!--<property name="caseSensitive" value="false"/>-->
        <!--</plugin>-->

        <!-- 阻止生成自动注释 -->
        <commentGenerator>
            <property name="javaFileEncoding" value="UTF-8"/>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库链接地址账号密码-->
        <!--<jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver"-->
                        <!--connectionURL="jdbc:oracle:thin:@10.128.134.12:1521:orcl"-->
                        <!--userId="IBIS_PAYMENT_ZYJ"-->
                        <!--password="12345678">-->
        <!--</jdbcConnection>-->
        <jdbcConnection driverClass="${jdbc_driverClassName}"
                        connectionURL="${jdbc_url}"
                        userId="${jdbc_user}"
                        password="${jdbc_pwd}">
        </jdbcConnection>


        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="cn.cloudwalk.demo.bean" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--生成Dao类存放位置-->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口 -->
       <javaClientGenerator type="XMLMAPPER" targetPackage="cn.cloudwalk.demo" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
       </javaClientGenerator>

        <!--生成对应表及类名去掉Mymvn install:install-file -Dfile=path/to/your/ojdbc8.jar -DgroupId=com.oracle
	-DartifactId=ojdbc8 -Dversion=19.3 -Dpackaging=jarbatis Generator生成的一堆 example-->
        <!--默认情况下是没有赋值的注意,identity默认为false,此时生成的sql的order为BEFORE.
        而我们需要的是插入后查询id并给bean赋值,所以需要的是AFTER,所以identity为true. -->
        <table tableName="CW_GE_DEMO"  domainObjectName="GeDemo" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
            <generatedKey column="id" sqlStatement="select uuid()" identity="false"/>
        </table>
    </context>
</generatorConfiguration>